#+OPTIONS: ^:nil
[[https://github.com/Dushistov/sdcv/actions?query=workflow%3ACI+branch%3Amaster][https://github.com/Dushistov/sdcv/workflows/CI/badge.svg]]
[[https://github.com/Dushistov/sdcv/blob/master/LICENSE][https://img.shields.io/badge/license-GPL%202-brightgreen.svg]]

* sdcv
*sdcv* is a simple, cross-platform, text-based utility for working with dictionaries in [[http://stardict-4.sourceforge.net/][StarDict]] format.
* How to compile and install
#+BEGIN_SRC sh
mkdir /tmp/build-sdcv
cd /tmp/build-sdcv
cmake path/to/source/code/of/sdcv
make
#+END_SRC
if you enable nls then you should also type
#+BEGIN_SRC sh
make lang
#+END_SRC
** to install type
#+BEGIN_SRC sh
make install
#+END_SRC
you can use "DESTDIR" variable to change installation path

* Documentation
See sdcv man page for usage description.

* Bugs
To report bugs use https://github.com/Dushistov/sdcv/issues ,
if it is not possible you can report it via email to dushistov at mail dot ru.
Be sure to include the word "sdcv" somewhere in the "Subject:" field.

* Integration with [[https://github.com/junegunn/fzf][fzf]]
Useful when you have multiple dictionaries
#+BEGIN_SRC sh
fzf --prompt="Dict: " \
    --phony \
    --bind "enter:reload(sdcv {q} -n --json | jq '.[].dict' -r)" \
    --preview "sdcv {q} -en --use-dict={}" \
    --preview-window=right:70%:wrap \
   < <(echo)
#+END_SRC

* Integration with readline
This lines can be added to inputrc file (~/.inputrc, /etc/inputrc),
to abort multiply usage with ESC:
#+begin_src
$if sdcv
    "\e\e": "-1\n"
$endif
#+end_src

* Notes to developer
** make source code release
#+BEGIN_SRC sh
make package_source
#+END_SRC
** update translation
#+BEGIN_SRC sh
cd po
xgettext -k_ ../src/*.cpp -o new.pot
msgmerge -U sdcv.pot new.pot
rm new.pot
for i in `ls *.po`; do msgmerge -U $i sdcv.pot; done
#+END_SRC
